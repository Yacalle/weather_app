{"version":3,"sources":["components/CityCountry.js","components/IconTemp.js","components/Button.js","components/ExtraInformation.js","App.js","reportWebVitals.js","index.js"],"names":["CityCountry","datalocation","location","name","country","current","condition","text","IconTem","temperature","tempLetter","src","icon","Button","setTemperature","setTempLetter","onClick","e","temp_c","temp_f","ExtraInformation","humidity","pressure_mb","wind_kph","wind_dir","App","useState","coordinate","setCoordinate","setDataLocation","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","length","url","fetch","then","res","json","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a56d2b3.chunk.js","sourcesContent":["export default function CityCountry ({datalocation}){\r\n    return(\r\n        <>\r\n            <h2>{datalocation[0].location.name}, {datalocation[0].location.country}</h2> \r\n            <p>{datalocation[0].current.condition.text}</p>\r\n        </>\r\n\r\n    )\r\n}","export default function IconTem ({datalocation, temperature, tempLetter}){\r\n    return(\r\n        <>\r\n            <img src={datalocation[0].current.condition.icon}></img>\r\n            <p>{temperature}{tempLetter}</p>\r\n        </>\r\n    )\r\n}","export default function Button ({setTemperature, setTempLetter, datalocation, temperature}){\r\n    return(\r\n        <button onClick={(e)=>{\r\n            if(temperature === datalocation[0].current.temp_c){\r\n                setTemperature(datalocation[0].current.temp_f);\r\n                setTempLetter('°F')\r\n            };\r\n            if(temperature === datalocation[0].current.temp_f){\r\n                setTemperature(datalocation[0].current.temp_c);\r\n                setTempLetter('°C')\r\n            }\r\n        }}>°C⇋°F</button>\r\n    )\r\n}","export default function ExtraInformation ({datalocation}){\r\n    return(\r\n        <div>\r\n            <p><span>Humidity:</span> {datalocation[0].current.humidity}%</p>\r\n            <p><span> Pressure:</span> {datalocation[0].current.pressure_mb} millibars</p>\r\n            <p><span>Wind:</span> {datalocation[0].current.wind_kph} km/h</p>\r\n            <p><span>Direction of the wind:</span> {datalocation[0].current.wind_dir}</p>\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport CityCountry from './components/CityCountry';\nimport IconTem from './components/IconTemp';\nimport Button from './components/Button';\nimport ExtraInformation from './components/ExtraInformation';\nfunction App() {\n  const [coordinate, setCoordinate] = useState([]);\n  const [datalocation, setDataLocation] = useState([]);\n  const [temperature, setTemperature] = useState('');\n  const [tempLetter, setTempLetter] = useState('');\n  useEffect(()=>{\n  const succes = (position)=>{\n    setCoordinate([...coordinate, position.coords.latitude, position.coords.longitude]);\n  };\n  navigator.geolocation.getCurrentPosition(succes)\n  }, []);\n\n  useEffect(()=>{\n    if(coordinate.length === 2){\n      let url = `https://api.weatherapi.com/v1/current.json?key=79e0d9ef4b9d4a6bae9192505210207&q=${coordinate[0]},${coordinate[1]}`;\n      fetch(url)\n      .then(res=>res.json())\n      .then(json=>{\n         setTemperature(json.current.temp_c)\n         setTempLetter('°C')\n         setDataLocation([...datalocation, json])\n      })\n    }\n  }, [coordinate]);\n  return(\n    datalocation.length !==0 ? \n      <div className=\"App\">\n        <div className=\"App_container\">\n          <div className=\"container_CityCountry\">\n            <CityCountry datalocation = {datalocation}/>\n          </div>\n          <div className=\"container_IconButtonExtra\">\n            <div className=\"IconButtonExtra_IconButton\">\n              <div className=\"IconButton_Tem\">\n                <IconTem datalocation = {datalocation} temperature = {temperature} tempLetter={tempLetter}/>\n              </div>\n              <Button setTemperature={setTemperature} setTempLetter={setTempLetter} datalocation={datalocation} temperature={temperature} />\n            </div>\n            <div className=\"IconButtonExtra_Extra\">\n              <ExtraInformation datalocation={datalocation}/>\n            </div>\n          </div>\n        </div>\n      </div>\n    : ''\n  )  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}